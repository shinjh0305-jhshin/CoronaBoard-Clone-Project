gastby를 왜 쓰는가?
1. 리액트에서는 기본적으로 CSR(Client Side Rendering)이 진행된다. 
즉, 브라우저에서 HTML과 JS를 다운로드 한 뒤, 페이지가 브라우저에서 렌더링 되는 개념이다.
이 경우, 사용자의 네트워크 상태 및 브라우저 상황에 따라서 사용자가 불만족스러운 웹 페이지 경험을 할 수 있다.
만약 정적 웹 페이지(게시판, 채팅 등 실시간 변동이 없는 페이지)가 필요하다면, 미리 HTML을 웹 페이지 빌드 단계에서 만들 수 있다.
(웹 페이지 요청 단계가 아니다. 이 경우, 오히려 서버의 리소스를 많이 잡아먹게 된다.)
이 작업은 서버에서 일어나는 SSR(Server Side Rendering)이며, 만약 CDN과 함께 쓰이면 매우 빠른 속도로 웹 페이지를 로딩할 수 있다.

2. 플러그인을 사용할 수 있다.
외부 API를 이용해서 외부에서 가져와서 HTML에 들어가야 하는 정보가 있는 경우, gastby에서는 이를 HTML에 빌드 단계에서 박아넣을 수 있다.
이는 NextJs나 Remix에서는 볼 수 없는 기능이다.

gastby-config.js : gastby에 포함 된 플러그인들을 적는다
gatsby-node.js : 정적 웹 페이지를 여러 개 만들 예정인데, 하나씩 하나씩 pages 폴더에 들어갈 js 파일을 만든 것은 귀찮다.
어디 외부에 데이터를 불러와서 바로 js 파일을 만들어주는  Node API(gatsby의 API 일종)을 사용한다.

components 폴더 : 리액트 component가 저장된다. 코로나보드에서는 react hook(함수형 컴포넌트)를 사용한다. 다른 종류로는 클래스 컴포넌트가 있다.
pages 폴더 : 여기 있는 js 파일들이 나중에 1:1로 하나의 웹사이트가 된다.

--------------------------------------

1. gatsby develop 명령을 실행하면, 페이지를 디벨롭 하는 과정에서 gatsby-node에 있는 createPages 함수가 실행된다. 프로세스 중간에 끼어들었다고 해서 이와 같은 함수를 후크 함수라고 부른다.

createPages 함수는 API로부터 전달받은 데이터를 이용해서 정적인 페이지를 마구마구 만들어내는 함수이다. 이 때, 정적인 페이지에 들어 갈 정보는 createPage 함수의 인자로 전달되고, 정적인 페이지에 대한 탬플릿은 /templates/single-page.js에 들어 있다.

한편, gatsby-node를 실행하기에 앞서서 data-loader에 들어있는 모듈이 전달된다.

2. data-loader에서는 크게 세 가지 일이 일어난다.
첫째, 구글 시트로부터 받은 국가 데이터 및 공지사항이 담긴 JSON 파일을 불러와서 나라 정보를 키-값 쌍으로 만든다.
둘째, API에 접근해서 국가 별 확진자 수를 가져온다.
셋째, 코로나보드 웹 사이트에서 어제-오늘 정보가 표시되어야 하므로, API에서 가져온 데이터를 어제-오늘 데이터로 뭉치는 데이터 전처리 작업이 일어난다.

첫째, 셋째 작업 결과물은 모듈로서 외부로 공개된다.

3. data-loader을 통해서 API 및 구글 시트(정확히는 로컬 JSON 파일)로부터 데이터를 가져왔다. 이를 통째로 /templates/single-pages.js로 보내서 정적 웹사이트를 프로듀싱 한다.

//여기부터는 아직 웹 사이트 빌드 단계로 안 넘어왔기에 추후 보강한다.